/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package bubt_rms.Panels;
import bubt_rms.Panels.*;
import Models.MenuItem_Model;
import Models.MenuItem_Model;
import bubt_rms.SqlConn;
import com.mysql.cj.jdbc.Blob;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;

/**
 *
 * @author islam
 */
public class MenuItemDes_user extends javax.swing.JPanel {

    /**
     * Creates new form Inventory
     */
    public MenuItemDes_user() {
        initComponents();
        AddItem_txt.setVisible(false);
        GetMenuItemList();
        setTable();
        setCombobox();
    }
    private byte[] selectedImageData;
    private static final int MAX_IMAGE_SIZE_KB = 64;
    private void selectImage() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                selectedImageData = readImage(selectedFile);

                // Check image size
                if (selectedImageData.length <= MAX_IMAGE_SIZE_KB * 1024) {
                    ImageIcon imageIcon = new ImageIcon(selectedImageData);
                    Image image = imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                    imageIcon = new ImageIcon(image);
                    ImageLbl.setIcon(imageIcon);
                } else {
                    JOptionPane.showMessageDialog(this, "Selected image size exceeds the limit (64KB).");
                    selectedImageData = null;
                    ImageLbl.setIcon(null);
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(new JRootPane(),ex);
            }
        }
    }
    private byte[] readImage(File file) throws IOException {
        try (FileInputStream fis = new FileInputStream(file)) {
            byte[] imageData = new byte[(int) file.length()];
            fis.read(imageData);
            return imageData;
        }
    }
    public MenuItemDes_user(String A){
        super();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    List<MenuItem_Model> MenuItemList = new ArrayList<MenuItem_Model>();
    SqlConn sql = new SqlConn();
    @SuppressWarnings("unchecked")
    private void setTable(){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        for (MenuItem_Model item : MenuItemList) {
            model.addRow(new Object[]{item.getItem_Name(),item.getItem_Price(),item.getItem_Category()});
        }
        model.fireTableDataChanged();
    }
    private void setCombobox(){
        try
        {
            ItemName_box.removeAllItems();
            for(MenuItem_Model item : MenuItemList){
            ItemName_box.addItem(item.getItem_ID()+ " - "+item.getItem_Name());
            }
            ItemName_box.setSelectedIndex(0);
            
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(new JRootPane(),ex);
        }
    }
    private void GetMenuItemList(){
        try{
            MenuItemList.clear();
            Class.forName("java.sql.Driver");
            Connection conn = DriverManager.getConnection(sql.sqlConnection,sql.sqlUser,sql.sqlPass);
            Statement stmt = conn.createStatement();
            String qrry = "select * from menu_item";
            ResultSet rs = stmt.executeQuery(qrry);
            while(rs.next()){
               int ID = Integer.parseInt(rs.getString("Item_ID"));
               String Name = rs.getString("Item_Name");
               double Price = Double.parseDouble(rs.getString("Item_Price"));
               String Category = rs.getString("Category");
               String Description = rs.getString("Description");
               byte[] Imaged = rs.getBytes("Item_Img");
               
               MenuItemList.add(new MenuItem_Model(ID, Name, Price, Category, Description,Imaged));
            }
        }catch(ClassNotFoundException| DateTimeException | NumberFormatException|SQLException ex){
            JOptionPane.showMessageDialog(new JRootPane(),"Error in Fetching Data In Inventory");
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ItemName_box = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        ItemPrice_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ItemCategory_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ClearBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AddItem_txt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Item_Description = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        ImageLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 102, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cafe Francoise", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Price");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 60, -1));

        ItemName_box.setBackground(new java.awt.Color(255, 102, 0));
        ItemName_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemName_boxActionPerformed(evt);
            }
        });
        add(ItemName_box, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 400, 30));

        jLabel2.setFont(new java.awt.Font("Cafe Francoise", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Item Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 90, -1));

        ItemPrice_txt.setBackground(new java.awt.Color(255, 102, 0));
        ItemPrice_txt.setEnabled(false);
        add(ItemPrice_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 400, 30));

        jLabel3.setFont(new java.awt.Font("Cafe Francoise", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Category");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 80, -1));

        ItemCategory_txt.setBackground(new java.awt.Color(255, 102, 0));
        ItemCategory_txt.setEnabled(false);
        add(ItemCategory_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 400, 30));

        jLabel4.setFont(new java.awt.Font("Cafe Francoise", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Description");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 90, -1));

        ClearBtn.setBackground(new java.awt.Color(102, 0, 0));
        ClearBtn.setFont(new java.awt.Font("Cafe Francoise", 0, 18)); // NOI18N
        ClearBtn.setForeground(new java.awt.Color(255, 204, 0));
        ClearBtn.setText("Clear");
        ClearBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });
        add(ClearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, 160, -1));

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));

        jTable1.setBackground(new java.awt.Color(255, 102, 0));
        jTable1.setFont(new java.awt.Font("Cafe Francoise", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Item Price", "Item Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 0, 51));
        jTable1.setSelectionBackground(new java.awt.Color(255, 51, 0));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 470, 450));

        AddItem_txt.setBackground(new java.awt.Color(255, 102, 0));
        add(AddItem_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 400, 30));

        Item_Description.setColumns(20);
        Item_Description.setRows(5);
        Item_Description.setEnabled(false);
        jScrollPane2.setViewportView(Item_Description);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 400, 110));

        jLabel5.setFont(new java.awt.Font("Cafe Francoise", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Image");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 370, 50, -1));

        ImageLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ImageLbl.setMaximumSize(new java.awt.Dimension(250, 250));
        ImageLbl.setMinimumSize(new java.awt.Dimension(250, 250));
        ImageLbl.setPreferredSize(new java.awt.Dimension(250, 250));
        add(ImageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 150, 150));
    }// </editor-fold>//GEN-END:initComponents
    
    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        // TODO add your handling code here:
        clearData();
        ItemName_box.setSelectedIndex(0);
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void ItemName_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemName_boxActionPerformed
        try{
        if(ItemName_box.getSelectedItem() == null)
            return;
        int ItemID = Integer.parseInt(ItemName_box.getSelectedItem().toString().split(" - ")[0]);
        for (MenuItem_Model item : MenuItemList) {
            if(ItemID == item.getItem_ID()){
                ItemPrice_txt.setText(Double.toString(item.getItem_Price()));
                ItemCategory_txt.setText(item.getItem_Category());
                Item_Description.setText(item.getItem_Description());
                byte[] imageData = item.getItem_img();
                ImageIcon imageIcon = new ImageIcon(imageData);
                Image image = imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                imageIcon = new ImageIcon(image);
                ImageLbl.setIcon(imageIcon);
            }
        }
        }
        catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(new JRootPane(),ex);
        }
    }//GEN-LAST:event_ItemName_boxActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try{ 
            if (evt.getClickCount() == 2 && evt.getButton() == java.awt.event.MouseEvent.BUTTON1) {
            
                javax.swing.JTable target = (javax.swing.JTable)evt.getSource();
                int row = target.getSelectedRow();            
                String invName = (String) target.getValueAt(row, 0); // Assuming Inv_name is in the second column
                ComboBoxModel<String> model = ItemName_box.getModel();
                for (int i = 0; i < model.getSize(); i++) {
                    String item = model.getElementAt(i).split("-")[1].trim();
                    if(item.equals(invName)){
                        System.out.println("Trye");
                        ItemName_box.setSelectedIndex(i);
                    }
                }
            
            
            
            
            }
        }
        catch(Exception e){
                System.out.println("\n"+e);
                JOptionPane.showMessageDialog(new JRootPane(),e);
        }
        
    }//GEN-LAST:event_jTable1MouseClicked
    private void clearData(){
        
        AddItem_txt.setText("");
        ItemPrice_txt.setText("");
        ItemCategory_txt.setText("");
        Item_Description.setText("");
        ImageLbl.setIcon(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddItem_txt;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JLabel ImageLbl;
    private javax.swing.JTextField ItemCategory_txt;
    private javax.swing.JComboBox<String> ItemName_box;
    private javax.swing.JTextField ItemPrice_txt;
    private javax.swing.JTextArea Item_Description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
